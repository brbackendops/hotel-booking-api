name: hotel-booking-api
run-name: ${{ github.actor }} is testing out
on:
  push:
    branches: ["development"]
  pull_request:
    branches: ["development"]

jobs:
  build:
    name: Build the APP
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bookdb
        options: >-
          --health-cmd pg_isready   --health-interval 10s   --health-timeout 5s   --health-retries 5
        ports:
        - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build Docker
      run: |
        docker -r build . --file Dockerfile.node -t my-hotel-api

    - name: Docker-Build the application
      run: docker run my-hotel-api npm run build

    - name: build the application
      run: "npm run build"

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bookdb
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
    steps:
    - uses: actions/checkout@v4

    - name: run the test
      run: npm test

    - name: Docker-Run Test
      run: |
        docker run my-hotel-api npm test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Git
      run: |
        git config --global user.name ""
        git config --global user.email ""

    - name: Merge Development into Production
      run: |
        git checkout main
        git merge development
        git push origin main
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

  status:
  - name: status
    run: echo "${{ github.status }}"






